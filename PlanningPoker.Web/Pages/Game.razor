@page "/{Hash}"
@inherits GameViewModel

<div class="row">
    <div class="col-auto">
        <label for="player-name">Your name:</label>
    </div>

    <div class="col">
        @if (this.Player != null)
        {
            <input id="player-name" class="form-control" type="text" value="@this.PlayerName" @onchange="this.NameChanged" />
        }
    </div>
</div>

@if (this.Game != null)
{
    <div class="row mt-3">
        <div class="col-auto">
            <button class="btn btn-primary" disabled="@(this.Game.CurrentRound == null || this.Game.CurrentRound.Cards.Any() == false || this.Game.CurrentRound.IsRevealed == true)" @onclick="this.RevealCards">Reveal Cards</button>
        </div>
        <div class="col-auto">
            <button class="btn btn-success" disabled="@(this.Game.CurrentRound?.IsRevealed == false)" @onclick="this.StartNewRound">New Round</button>
        </div>
    </div>
}

@if (this.Game?.CurrentRound != null)
{
    <div class="row mt-3">
        <div class="col">
            <div class="alert alert-info">
                Round: @this.Game.RoundNumber
            </div>
        </div>
    </div>

    <div class="row mt-3">
        @foreach (var player in this.Game.Players)
        {
            <div class="col-auto">
                @player.Name
                @if (this.Game.CurrentRound.Cards.ContainsKey(player) == true)
                {
                    if (this.Game.CurrentRound.IsRevealed == true)
                    {
                        <kbd>
                            @this.Game.CurrentRound.Cards[player]
                        </kbd>
                    }
                    else
                    {
                        @:🃏
                    }
                }
                else
                {
                    @:❌
                }
            </div>
        }
    </div>
}

<div class="row mt-3">
    @if (this.Game != null && this.Game.CurrentRound != null && this.Game.CurrentRound.IsRevealed == false)
    {
        @foreach (var card in this.Game.CardDeck)
        {
            <button class="btn btn-sm btn-outline-secondary mx-1" @onclick="(() => this.VoteCard(card))">@card</button>
        }
    }
</div>

@*<div class="row mt-3">
        @if (this.Game?.Rounds.Count > 1)
        {
            <div>
                Previous Rounds:

                @foreach (var round in this.Game.Rounds.Except(new[] { this.Game.CurrentRound }))
                {
                    <div>
                        Round @(1 * this.Game.Rounds.IndexOf(round))
                        <br />

                        <ul>
                            @foreach (var card in round.Cards)
                            {
                                <li>
                                    @card.Key.Name:
                                    <kbd>
                                        @if (round.IsRevealed == true)
                                        {
                                            @card.Value
                                        }
                                        else
                                        {
                                            @:👍
                                        }
                                    </kbd>
                                </li>
                            }
                        </ul>
                    </div>
                }
            </div>
        }
    </div>*@